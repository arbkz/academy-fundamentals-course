WEBVTT

4e9a3ed9-f1f4-4fbe-bf58-bf571827fc0e-0
00:00:04.920 --> 00:00:08.040
Database security is a huge and
important topic.

e65d1923-fa35-401a-9266-a6b548815cf0-0
00:00:08.720 --> 00:00:12.136
In this short video I'll give
you a flavour of how CrateDB

e65d1923-fa35-401a-9266-a6b548815cf0-1
00:00:12.136 --> 00:00:13.200
addresses security.

e1e18fe3-ef14-4dae-9c67-642452c55959-0
00:00:13.800 --> 00:00:17.796
We'll look at controlling access
to CrateDB and encryption of

e1e18fe3-ef14-4dae-9c67-642452c55959-1
00:00:17.796 --> 00:00:21.667
data in transit and at rest, as
well as other authentication,

e1e18fe3-ef14-4dae-9c67-642452c55959-2
00:00:21.667 --> 00:00:24.040
authorisation and audit trail
topics.

13a6c3d7-d77d-4fab-ae47-afb1a9eb78fa-0
00:00:25.320 --> 00:00:28.572
Let's begin by understanding a
little bit about role-based

13a6c3d7-d77d-4fab-ae47-afb1a9eb78fa-1
00:00:28.572 --> 00:00:29.400
access control.

6562fc92-76a7-496f-9623-50d8d37b647e-0
00:00:31.360 --> 00:00:34.969
We don't always want everyone to
have the same level of access to

6562fc92-76a7-496f-9623-50d8d37b647e-1
00:00:34.969 --> 00:00:36.720
the data stored in the database.

1b365a28-df7f-4218-bf37-30f8cd63273a-0
00:00:37.600 --> 00:00:41.731
A common way of addressing this
is via Role-Based Access Control

1b365a28-df7f-4218-bf37-30f8cd63273a-1
00:00:41.731 --> 00:00:42.240
or RBAC.

86e72814-c4c6-416f-8d24-c219092af3e9-0
00:00:42.600 --> 00:00:44.840
This is fully supported in CrateDB.

91c9d1ea-ba2c-49cb-8586-35fcf7591afb-0
00:00:45.600 --> 00:00:48.920
Here I'm creating a role that
we'll call taxi_reader.

3f36b59b-a8ca-4c45-85ae-b259ade767da-0
00:00:50.640 --> 00:00:54.118
Let's first deny that role
access to all tables in the

3f36b59b-a8ca-4c45-85ae-b259ade767da-1
00:00:54.118 --> 00:00:55.320
default doc schema.

49baea32-011b-418c-a90d-de6e566d7a84-0
00:00:56.440 --> 00:01:01.592
Then grant it query access to
the 2 taxi tables named taxis

49baea32-011b-418c-a90d-de6e566d7a84-1
00:01:01.592 --> 00:01:02.880
and taxi_rides.

9b36c52a-787c-4d76-9bdf-87ebd3318a86-0
00:01:03.840 --> 00:01:04.840
Now we have a role.

6278a9e0-7b17-4f74-9cbd-ea4c3a14e71d-0
00:01:04.840 --> 00:01:07.360
We can assign it to one or more
users.

7a398454-2f59-4f76-8108-dfefca76baae-0
00:01:09.120 --> 00:01:13.160
Let's create a user named taxi_user
and give it a password.

7bd597e8-984f-4ae7-bc47-019340bb7a4c-0
00:01:14.040 --> 00:01:16.720
By default, this user has no
privileges.

7054e5f9-9aa2-489e-8a49-06b97fa6b994-0
00:01:18.000 --> 00:01:21.625
Giving the taxi_reader role to
our new user grants it the

7054e5f9-9aa2-489e-8a49-06b97fa6b994-1
00:01:21.625 --> 00:01:24.000
privileges associated with that
role.

4bb2228c-074f-40e9-9eff-effb8bf20f23-0
00:01:24.920 --> 00:01:27.240
So what can taxi_user access?

e07e7cb0-a8f6-4be7-80b6-9a94fb51cf87-0
00:01:27.640 --> 00:01:28.520
Let's find out.

42a9b3d2-2732-4cb9-bced-6bba787c5806-0
00:01:29.960 --> 00:01:33.400
I'm now connected to CrateDB
as the taxi_user.

685e2a44-e744-4bc0-9f4b-4a2667da41b7-0
00:01:34.000 --> 00:01:37.200
First, let's try a query against
the taxis table.

78f4ff63-59c4-4c72-b66e-9e6e923d8e8d-0
00:01:38.520 --> 00:01:42.000
As you'd expect, this user is
allowed to execute this query.

01080537-c64d-4bb9-b029-f9a3ec423573-0
00:01:43.680 --> 00:01:46.920
What about a query that uses the
311 call data?

609f8800-f950-4a8e-ad16-387e3966436a-0
00:01:48.400 --> 00:01:51.727
This results in an error as the
taxi_user doesn't have the

609f8800-f950-4a8e-ad16-387e3966436a-1
00:01:51.727 --> 00:01:54.040
correct privileges to access
that table.

3488941a-29a2-413d-a0fd-305cccdf30e4-0
00:01:55.840 --> 00:01:59.973
Remember that we get the taxi
user query rights over the taxi

3488941a-29a2-413d-a0fd-305cccdf30e4-1
00:01:59.973 --> 00:02:00.440
tables.

51baffd6-d8e9-46af-aaed-6d46b3814ad8-0
00:02:01.080 --> 00:02:05.288
This query attempts to modify
the taxis table by adding a new

51baffd6-d8e9-46af-aaed-6d46b3814ad8-1
00:02:05.288 --> 00:02:05.560
row.

4b07e4b3-2dd3-4d4f-bc95-2922e6e1e672-0
00:02:06.360 --> 00:02:09.120
Is this user allowed to perform
this operation?

6edc9c94-6146-4bb8-9728-0e897c925c14-0
00:02:09.960 --> 00:02:14.496
No, this insert fails as our
taxi_user lacks the privileges

6edc9c94-6146-4bb8-9728-0e897c925c14-1
00:02:14.496 --> 00:02:17.520
to perform operations that
modify data.

54f1df58-9625-4904-9dad-2154826c166c-0
00:02:18.120 --> 00:02:22.024
It's essentially a read only
user with access to the two taxi

54f1df58-9625-4904-9dad-2154826c166c-1
00:02:22.024 --> 00:02:22.480
tables.

0e65e165-ded9-4111-b7af-885ed7a919dc-0
00:02:24.240 --> 00:02:27.627
CrateDB supports data
encryption in the following

0e65e165-ded9-4111-b7af-885ed7a919dc-1
00:02:27.627 --> 00:02:27.960
ways.

1efc34aa-d553-4bad-92d8-e7f046f27b42-0
00:02:28.760 --> 00:02:33.027
For data in transit, both HTTP
and PostgreSQL Wire Protocol

1efc34aa-d553-4bad-92d8-e7f046f27b42-1
00:02:33.027 --> 00:02:37.589
endpoints can be encrypted with
configuration options for the

1efc34aa-d553-4bad-92d8-e7f046f27b42-2
00:02:37.589 --> 00:02:42.077
Postgres endpoint allowing host
based authentication and SSL

1efc34aa-d553-4bad-92d8-e7f046f27b42-3
00:02:42.077 --> 00:02:42.960
enforcement.

b9cc718b-560c-49f8-adb9-b27c5b77318e-0
00:02:44.520 --> 00:02:48.366
Communications between nodes
forming a CrateDB cluster can

b9cc718b-560c-49f8-adb9-b27c5b77318e-1
00:02:48.366 --> 00:02:49.520
also be encrypted.

2e2d81a0-9269-4871-9298-1ab7541ed681-0
00:02:50.880 --> 00:02:54.701
For data at rest we recommend
the use of encrypted disk

2e2d81a0-9269-4871-9298-1ab7541ed681-1
00:02:54.701 --> 00:02:58.658
storage and this is of course
the default in our CrateDB

2e2d81a0-9269-4871-9298-1ab7541ed681-2
00:02:58.658 --> 00:03:00.160
managed cloud service.

808ca38a-6cfb-451f-a512-774cd2725fb1-0
00:03:02.360 --> 00:03:05.880
Now let's revisit authentication
and authorisation, beginning

be02343d-da9f-4ae1-b91e-4fca142e045e-0
00:03:05.960 --> 00:03:10.084
with authentication.
We've seen how users can be

be02343d-da9f-4ae1-b91e-4fca142e045e-1
00:03:10.084 --> 00:03:12.880
authenticated by username and
password.

d3239380-4aa1-4af6-a106-da4979270693-0
00:03:13.200 --> 00:03:16.760
Authentication by client
certificate is also possible.

f779cae8-9b26-4ab5-9582-2507ce6f31f0-0
00:03:17.560 --> 00:03:21.366
Passwords are stored securely
and host based authentication

f779cae8-9b26-4ab5-9582-2507ce6f31f0-1
00:03:21.366 --> 00:03:24.920
can be enabled to provide an
additional layer of trust.

03871321-b322-4885-bbb6-6e08b986feae-0
00:03:25.760 --> 00:03:29.146
This also applies to
communications between nodes in

03871321-b322-4885-bbb6-6e08b986feae-1
00:03:29.146 --> 00:03:30.360
a CrateDB cluster.

8aeff2a0-7e0a-4d78-8b98-a67907c60dd3-0
00:03:32.040 --> 00:03:33.960
Let's move on to authorisation.

deaab222-9fa4-4f9b-b86b-a2b86d86368d-0
00:03:35.080 --> 00:03:39.106
As demonstrated earlier, CrateDB
uses Role-Based Access

deaab222-9fa4-4f9b-b86b-a2b86d86368d-1
00:03:39.106 --> 00:03:43.063
Control, or RBAC for fine
grained permissions management

deaab222-9fa4-4f9b-b86b-a2b86d86368d-2
00:03:43.063 --> 00:03:47.089
of all aspects of working with
data and administering the

deaab222-9fa4-4f9b-b86b-a2b86d86368d-3
00:03:47.089 --> 00:03:48.200
database itself.

a434cc79-46fa-4182-865a-9e06ef9f43bc-0
00:03:50.480 --> 00:03:54.441
How does CrateDB allow you to
keep track of actions performed

a434cc79-46fa-4182-865a-9e06ef9f43bc-1
00:03:54.441 --> 00:03:56.360
by your database and its users?

a36f5605-e228-4379-8d86-0e2e5b99e21e-0
00:03:57.560 --> 00:04:01.405
Queries performed on a CrateDB
cluster are logged in internal

a36f5605-e228-4379-8d86-0e2e5b99e21e-1
00:04:01.405 --> 00:04:01.840
tables.

c7485734-16a5-4bfa-8e2a-23a125e2e346-0
00:04:02.520 --> 00:04:06.232
These can be exported to log
files for future analysis or

c7485734-16a5-4bfa-8e2a-23a125e2e346-1
00:04:06.232 --> 00:04:07.000
integration.

a45c6807-1825-4bf4-b196-65a8d6d83ec1-0
00:04:08.200 --> 00:04:12.596
Monitoring information can be
collected and reported using JMX

a45c6807-1825-4bf4-b196-65a8d6d83ec1-1
00:04:12.596 --> 00:04:14.480
Java Management Extensions.

cf339265-cb21-42c5-8e85-489413265f68-0
00:04:15.440 --> 00:04:19.173
This information can then be
forwarded on to other monitoring

cf339265-cb21-42c5-8e85-489413265f68-1
00:04:19.173 --> 00:04:21.040
tools, for example, Prometheus.

eaa7bd33-ccd3-4b49-bbc8-1b3ed0ca9ab5-0
00:04:23.000 --> 00:04:25.675
CrateDB maintains the
following security

eaa7bd33-ccd3-4b49-bbc8-1b3ed0ca9ab5-1
00:04:25.675 --> 00:04:28.600
certifications for its managed
cloud platform.

e3feb9e3-a2a5-48e9-bee9-931fa74af7f8-0
00:04:29.320 --> 00:04:33.873
The ISO IEC 27001 certification
signifies the attainment of the

e3feb9e3-a2a5-48e9-bee9-931fa74af7f8-1
00:04:33.873 --> 00:04:38.569
highest standards in operational
and information security and SoC

e3feb9e3-a2a5-48e9-bee9-931fa74af7f8-2
00:04:38.569 --> 00:04:42.696
two compliance ensures that the
client data is stored and

e3feb9e3-a2a5-48e9-bee9-931fa74af7f8-3
00:04:42.696 --> 00:04:44.760
processed in a secure manner.

a6cb2c4c-54e3-4a57-8644-40b364a04cd8-0
00:04:46.600 --> 00:04:50.332
This video provided a high level
overview of the various ways

a6cb2c4c-54e3-4a57-8644-40b364a04cd8-1
00:04:50.332 --> 00:04:52.440
that CrateDB addresses
security.

fb211fb3-8bdd-4b07-85dc-a5bf319e82e7-0
00:04:53.040 --> 00:04:56.265
Of course, this is a huge topic
and it's something you should

fb211fb3-8bdd-4b07-85dc-a5bf319e82e7-1
00:04:56.265 --> 00:04:59.543
plan for and consider carefully
when implementing any database

fb211fb3-8bdd-4b07-85dc-a5bf319e82e7-2
00:04:59.543 --> 00:04:59.960
product.

d6804677-0188-4902-9b18-2ac5a625062c-0
00:05:00.920 --> 00:05:04.150
I recommend you read the
relevant sections of the online

d6804677-0188-4902-9b18-2ac5a625062c-1
00:05:04.150 --> 00:05:07.833
documentation and the CrateDB
Architecture Guide to learn more

d6804677-0188-4902-9b18-2ac5a625062c-2
00:05:07.833 --> 00:05:10.780
about different aspects of
security and how to take

d6804677-0188-4902-9b18-2ac5a625062c-3
00:05:10.780 --> 00:05:11.800
advantage of them.

8e818263-4e7c-4f1a-8c0c-3261d1d0a5ea-0
00:05:12.680 --> 00:05:15.629
Furthermore, don't forget you
can always find

8e818263-4e7c-4f1a-8c0c-3261d1d0a5ea-1
00:05:15.629 --> 00:05:19.667
us online at community.cratedb.com
our online forums where we're

8e818263-4e7c-4f1a-8c0c-3261d1d0a5ea-2
00:05:19.667 --> 00:05:22.040
ready to help answer your
questions.