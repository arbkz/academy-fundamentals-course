WEBVTT

ff0855c0-79be-4dec-8fd6-1c1ab33e5832-0
00:00:04.200 --> 00:00:07.480
This video provides a high level
overview of CrateDB.

2f2f2c31-410c-4b34-83d5-34192f15a60e-0
00:00:08.200 --> 00:00:11.702
You'll see what we mean by a
multi-model database, how multi-

2f2f2c31-410c-4b34-83d5-34192f15a60e-1
00:00:11.702 --> 00:00:14.974
model data can be queried with
SQL, and we'll look at

2f2f2c31-410c-4b34-83d5-34192f15a60e-2
00:00:14.974 --> 00:00:17.960
flexible data schemas and high
level architecture.

b1989804-a87c-4146-9c5f-055ea8a594e6-0
00:00:19.360 --> 00:00:20.520
What is CrateDB?

63de83f2-4d02-470b-b9f3-fcea39453aa7-0
00:00:21.280 --> 00:00:25.137
CrateDB is a hyper-fast open
source multi-model database

63de83f2-4d02-470b-b9f3-fcea39453aa7-1
00:00:25.137 --> 00:00:29.194
combining the simplicity of
SQL and flexible schemas with

63de83f2-4d02-470b-b9f3-fcea39453aa7-2
00:00:29.194 --> 00:00:32.320
the scalability of a distributed
architecture.

21ba110d-3080-45eb-85d4-5151f823a9c4-0
00:00:33.480 --> 00:00:36.200
CrateDB is a multi-model
database.

c8ab1480-b02c-419d-8c7e-9c4ce95e954b-0
00:00:36.360 --> 00:00:39.752
Its strength lies in the
efficient handling of multiple

c8ab1480-b02c-419d-8c7e-9c4ce95e954b-1
00:00:39.752 --> 00:00:43.206
data models within the same
database and even within the

c8ab1480-b02c-419d-8c7e-9c4ce95e954b-2
00:00:43.206 --> 00:00:44.600
same record in a table.

782fb3c8-f0af-441f-863f-b9ff482702f7-0
00:00:45.240 --> 00:00:48.706
This allows you to use one
database for all structured,

782fb3c8-f0af-441f-863f-b9ff482702f7-1
00:00:48.706 --> 00:00:51.120
semi-structured and unstructured
data.

5967648c-ba4b-4ccc-8995-b75a2726188b-0
00:00:51.720 --> 00:00:56.455
For example, tabular data, JSON
or documents, time series,

5967648c-ba4b-4ccc-8995-b75a2726188b-1
00:00:56.455 --> 00:01:00.480
vectors, geospatial, full text
and binary objects.

d335a7e6-6dc8-4eb2-b53e-97b65288d1b1-0
00:01:01.040 --> 00:01:04.554
You can create hybrid data
models comprised of structured

d335a7e6-6dc8-4eb2-b53e-97b65288d1b1-1
00:01:04.554 --> 00:01:07.160
and semi-structured data all in
one place.

dd2f1705-1ec6-44cf-b943-2c917e6b62f5-0
00:01:08.640 --> 00:01:12.152
CrateDB eliminates the need to
manage and synchronise multiple

dd2f1705-1ec6-44cf-b943-2c917e6b62f5-1
00:01:12.152 --> 00:01:15.963
database technologies and learn
different languages by offering

dd2f1705-1ec6-44cf-b943-2c917e6b62f5-2
00:01:15.963 --> 00:01:19.000
unified access via the well
known SQL language.

b12f66b1-997e-44ba-8f4d-2c36dd3b4e74-0
00:01:20.280 --> 00:01:24.471
All data models are accessible
via SQL, allowing for complex

b12f66b1-997e-44ba-8f4d-2c36dd3b4e74-1
00:01:24.471 --> 00:01:26.960
queries, full text and vector
search.

4c701d8b-c426-4bc5-8bb3-bc4982587782-0
00:01:28.240 --> 00:01:31.529
Additionally, CrateDB
implements the PostgreSQL wire

4c701d8b-c426-4bc5-8bb3-bc4982587782-1
00:01:31.529 --> 00:01:35.325
protocol, ensuring compatibility
with the wide ecosystem of

4c701d8b-c426-4bc5-8bb3-bc4982587782-2
00:01:35.325 --> 00:01:37.160
tools, libraries and drivers.

85ce0075-73b1-4abd-8896-c4adf83bf0ad-0
00:01:37.920 --> 00:01:41.303
Here's an example SQL query
that demonstrates the multi-

85ce0075-73b1-4abd-8896-c4adf83bf0ad-1
00:01:41.303 --> 00:01:42.680
model power of CrateDB.

4a4903f6-ba15-4454-b6ce-0178af100444-0
00:01:43.720 --> 00:01:44.200
Many U.S.

95c361a8-a08b-427a-b59a-10999f03f1c5-0
00:01:44.200 --> 00:01:48.152
cities have a citizens hotline
for reporting issues such as

95c361a8-a08b-427a-b59a-10999f03f1c5-1
00:01:48.152 --> 00:01:49.800
potholes in the road, street

75687db6-ff09-44c4-b67a-c270a883e9c6-0
00:01:49.800 --> 00:01:52.080
lights that don't work, and
other issues.

55bd59f0-c1e0-4902-b5d9-9898896faeba-0
00:01:52.880 --> 00:01:56.120
New issues are usually reported
by calling 311.

bc7f58d9-a0de-4809-ab32-3b9d01792a83-0
00:01:56.760 --> 00:02:00.585
As part of our data set, we have
records for 311 calls made in

bc7f58d9-a0de-4809-ab32-3b9d01792a83-1
00:02:00.585 --> 00:02:01.800
the city of Chicago.

19549e44-dc87-4a60-aa79-6a8225306dca-0
00:02:02.640 --> 00:02:06.373
In this SELECT query, we're
asking CrateDB to tell us the

19549e44-dc87-4a60-aa79-6a8225306dca-1
00:02:06.373 --> 00:02:10.297
four most common types of 311
call reported in an area around

19549e44-dc87-4a60-aa79-6a8225306dca-2
00:02:10.297 --> 00:02:11.880
Chicago's O'Hare Airport.

82493bfb-3fb1-4037-af83-80c26505e41f-0
00:02:13.400 --> 00:02:18.280
Here, locationdetails is a
column of type object containing

82493bfb-3fb1-4037-af83-80c26505e41f-1
00:02:18.280 --> 00:02:19.160
JSON data.

41a3e780-2fa6-4af0-b777-0c3888772f19-0
00:02:20.200 --> 00:02:23.641
Within that JSON data, the
field location contains the

41a3e780-2fa6-4af0-b777-0c3888772f19-1
00:02:23.641 --> 00:02:27.575
latitude and longitude for the
area that the issue was reported

41a3e780-2fa6-4af0-b777-0c3888772f19-2
00:02:27.575 --> 00:02:27.759
in.

8670374c-3059-4646-a92f-a53b6f8637e3-0
00:02:28.720 --> 00:02:32.195
We're asking CrateDB to
consider only calls whose

8670374c-3059-4646-a92f-a53b6f8637e3-1
00:02:32.195 --> 00:02:36.216
location falls within the
provided Geo polygon representing

8670374c-3059-4646-a92f-a53b6f8637e3-2
00:02:36.216 --> 00:02:40.442
the area around O'Hare Airport,
and we want to get a count of

8670374c-3059-4646-a92f-a53b6f8637e3-3
00:02:40.442 --> 00:02:44.804
each different type of call made
from that area, returning only

8670374c-3059-4646-a92f-a53b6f8637e3-4
00:02:44.804 --> 00:02:46.440
the four top call types.

474a6ec8-4593-43ae-a968-ca3d48f88cf9-0
00:02:48.840 --> 00:02:52.953
Most common call type by far is
to report noise from passing

474a6ec8-4593-43ae-a968-ca3d48f88cf9-1
00:02:52.953 --> 00:02:53.560
aircraft.

93860678-ca8a-465a-84ad-75b2d05e3c51-0
00:02:54.080 --> 00:02:57.001
This is perhaps not surprising
for an area near one of the

93860678-ca8a-465a-84ad-75b2d05e3c51-1
00:02:57.001 --> 00:02:58.240
world's busiest airports.

c049d437-00a7-49d6-928b-5ac2f48bf4f0-0
00:02:59.720 --> 00:03:04.360
JSON data can be stored in an
object field in a table in CrateDB.

9606f00b-4976-43e5-a712-ccb6db4eb940-0
00:03:05.240 --> 00:03:09.191
Object fields created with the
default DYNAMIC policy are used

9606f00b-4976-43e5-a712-ccb6db4eb940-1
00:03:09.191 --> 00:03:10.760
to store arbitrary JSON.

9f6a7bbe-5ec8-4b6a-8594-ea5ccf5139eb-0
00:03:11.560 --> 00:03:15.260
Here, we're storing a JSON
object in the locationdetails

9f6a7bbe-5ec8-4b6a-8594-ea5ccf5139eb-1
00:03:15.260 --> 00:03:17.080
field of our 311 calls table.

d8b5533d-e695-4014-8447-67fdee8c0011-0
00:03:18.120 --> 00:03:20.400
This object can contain any
structure.

e2695364-0e58-464a-878e-4c0c6108f857-0
00:03:20.760 --> 00:03:23.762
In this example, we have an
object containing a nested

e2695364-0e58-464a-878e-4c0c6108f857-1
00:03:23.762 --> 00:03:25.400
object and a couple of arrays.

a6833c6e-325e-40c6-8afe-17e359d4109b-0
00:03:25.400 --> 00:03:29.243
To ensure the best query
performance, CrateDB indexes

a6833c6e-325e-40c6-8afe-17e359d4109b-1
00:03:29.243 --> 00:03:31.760
these objects automatically for
us.

bc911514-c8f4-4791-9eca-a7699ae62b1f-0
00:03:32.600 --> 00:03:36.400
CrateDB can also allow for
flexibility in table schemas.

c35f970b-7181-4d03-a7c2-3e29f398f73a-0
00:03:37.200 --> 00:03:40.665
Let's create a table to store
details of Chicago's taxi

c35f970b-7181-4d03-a7c2-3e29f398f73a-1
00:03:40.665 --> 00:03:41.160
drivers.

774f5370-874d-4a90-8ada-80ad77df8ff5-0
00:03:41.760 --> 00:03:45.326
Here I want to store the name
and licence number as text, as

774f5370-874d-4a90-8ada-80ad77df8ff5-1
00:03:45.326 --> 00:03:48.775
the licence number may contain
alphanumerics, and I want a

774f5370-874d-4a90-8ada-80ad77df8ff5-2
00:03:48.775 --> 00:03:52.400
boolean field for whether or not
the driver is a first aider.

46caec4c-394d-47cf-a639-a1bf7c7b8b98-0
00:03:53.320 --> 00:03:57.391
Note that I'm telling CrateDB
to use a dynamic column policy

46caec4c-394d-47cf-a639-a1bf7c7b8b98-1
00:03:57.391 --> 00:03:57.720
here.

650bff1b-7167-4316-b518-530152107d1c-0
00:03:58.400 --> 00:04:02.252
This tells CrateDB that we
might add or update data in ways

650bff1b-7167-4316-b518-530152107d1c-1
00:04:02.252 --> 00:04:04.400
that can change the table
schema.

01058d08-d388-4d51-8ca4-c39ccef2c2eb-0
00:04:04.400 --> 00:04:08.450
As a side effect, this allows us
to easily evolve our schema as

01058d08-d388-4d51-8ca4-c39ccef2c2eb-1
00:04:08.450 --> 00:04:10.160
our data changes over time.

4765b303-d483-4a71-b27f-cf25abcf6605-0
00:04:12.640 --> 00:04:15.733
Let's insert a record with
values corresponding to the

4765b303-d483-4a71-b27f-cf25abcf6605-1
00:04:15.733 --> 00:04:18.320
columns we specified when
creating the table.

70642e60-1c24-4138-a1b6-82a287031d63-0
00:04:19.800 --> 00:04:24.470
I've inserted a record for
myself with licence number ABC956 and

70642e60-1c24-4138-a1b6-82a287031d63-1
00:04:24.470 --> 00:04:27.400
a true flag for being a first
aider.

4a830200-7337-4092-b8d2-fbf44fcb474d-0
00:04:30.200 --> 00:04:33.933
Inserting this second driver,
we've referenced an additional

4a830200-7337-4092-b8d2-fbf44fcb474d-1
00:04:33.933 --> 00:04:35.280
column penaltypoints.

8661caaa-8b4d-4083-a55f-72eab45792d8-0
00:04:36.080 --> 00:04:39.861
This insert succeeds as we've
defined the drivers table to

8661caaa-8b4d-4083-a55f-72eab45792d8-1
00:04:39.861 --> 00:04:41.720
have a dynamic column policy.

ba7356e6-9093-43a9-853a-34924d8e2f91-0
00:04:43.520 --> 00:04:46.689
Here we've asked CrateDB to
show us the CREATE TABLE

ba7356e6-9093-43a9-853a-34924d8e2f91-1
00:04:46.689 --> 00:04:48.920
statement for the Taxi drivers
table.

82fe8c60-9a4e-4193-b250-d18075794fbb-0
00:04:49.840 --> 00:04:53.520
Note that the table now has an
extra column penaltypoints.

a909180b-f10d-4c5c-a3e5-6a3a39dc073e-0
00:04:54.800 --> 00:04:58.586
CrateDB has inferred the type
BIGINT for this column based on

a909180b-f10d-4c5c-a3e5-6a3a39dc073e-1
00:04:58.586 --> 00:05:01.840
the data provided when our
second driver was inserted.

2bdd1b18-a64e-4b70-9ff6-1df70d16678e-0
00:05:03.120 --> 00:05:06.363
Records added before the table
schema was changed will have a

2bdd1b18-a64e-4b70-9ff6-1df70d16678e-1
00:05:06.363 --> 00:05:08.560
null value for the penaltypoints
column.

9b0b7df8-4920-46e6-af5b-85270288a38b-0
00:05:09.200 --> 00:05:12.848
If you know your data schema,
CrateDB's Strict option for

9b0b7df8-4920-46e6-af5b-85270288a38b-1
00:05:12.848 --> 00:05:16.680
objects and tables enables the
database to enforce it for you.

4da4370f-df5e-40f5-bf5c-b419183e62c5-0
00:05:18.000 --> 00:05:21.494
In this version of the 311
table, objects must match the

4da4370f-df5e-40f5-bf5c-b419183e62c5-1
00:05:21.494 --> 00:05:23.640
declared structure to be
inserted.

7beec251-4a43-4493-9c9e-f0542b1df79c-0
00:05:24.840 --> 00:05:28.256
Similarly, our table schema can
be enforced using the STRICT

7beec251-4a43-4493-9c9e-f0542b1df79c-1
00:05:28.256 --> 00:05:30.440
column policy when creating the
table.

001790c5-df2b-4492-8429-f4ee433258d9-0
00:05:31.040 --> 00:05:34.200
Finally, let's talk about CrateDB's
architecture.

930a349b-db21-4a4c-aa07-5b2211a417f9-0
00:05:35.040 --> 00:05:38.525
CrateDB is a distributed
database with a shared nothing

930a349b-db21-4a4c-aa07-5b2211a417f9-1
00:05:38.525 --> 00:05:39.320
architecture.

c77b0cf4-cdba-4bff-a659-021485768db5-0
00:05:39.880 --> 00:05:43.200
Data is stored on multiple nodes
and automatically balanced

c77b0cf4-cdba-4bff-a659-021485768db5-1
00:05:43.200 --> 00:05:44.640
across nodes in a cluster.

9f7e713f-5b33-4e43-9910-d838025fdbae-0
00:05:45.440 --> 00:05:48.819
It scales horizontally and
provides high availability with

9f7e713f-5b33-4e43-9910-d838025fdbae-1
00:05:48.819 --> 00:05:50.480
self-healing characteristics.

8ec765b8-4b04-4409-941d-15db09c69d4f-0
00:05:51.720 --> 00:05:55.513
CrateDB's distributed SQL
engine enables queries,

8ec765b8-4b04-4409-941d-15db09c69d4f-1
00:05:55.513 --> 00:05:59.798
aggregations, joins and full
text searches with the power of

8ec765b8-4b04-4409-941d-15db09c69d4f-2
00:05:59.798 --> 00:06:02.960
Lucene to be performed
efficiently at speed.

e851114f-1247-4e9d-b52d-c5f3521c9d6d-0
00:06:03.840 --> 00:06:07.917
CrateDB can be deployed in the
cloud, at the edge, on premise

e851114f-1247-4e9d-b52d-c5f3521c9d6d-1
00:06:07.917 --> 00:06:09.600
or as a hybrid deployment.